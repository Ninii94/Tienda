{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nini\\\\programacion\\\\Tienda\\\\src\\\\components\\\\PanelAdmin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './admin.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminCrud() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: '',\n    image: ''\n  });\n  const [alertMessage, setAlertMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/products');\n      setProducts(response.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const handleInputChange = e => {\n    setNewProduct({\n      ...newProduct,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddProduct = async () => {\n    try {\n      await axios.post('http://localhost:3001/products', newProduct);\n      setAlertMessage('Producto añadido con éxito');\n      setNewProduct({\n        name: '',\n        price: '',\n        image: ''\n      });\n      fetchProducts();\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n  const handleDeleteProduct = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/products/${id}`);\n      setAlertMessage('Producto eliminado');\n      fetchProducts();\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  const handleLogout = () => {\n    console.log('Sesión cerrada');\n    nav;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"A\\xF1adir Producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Nombre\",\n        value: newProduct.name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        placeholder: \"Precio\",\n        value: newProduct.price,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"image\",\n        placeholder: \"URL de la imagen\",\n        value: newProduct.image,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProduct,\n        children: \"A\\xF1adir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), alertMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nombre: \", product.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precio: \", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteProduct(product.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Guardar cambios y cerrar sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminCrud, \"tBMWM9T81l+KG20FJd7IYwPnkRI=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminCrud;\nexport default AdminCrud;\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./admin.css\";\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst AdminCrud = ({ products, updateProducts }) => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setProductImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productName);\r\n    formData.append(\"price\", productPrice);\r\n    formData.append(\"image\", productImage);\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:3001/products\", formData, {\r\n        headers: {\r\n          \"Content-Type\": 'multipart/form-data'\r\n        }\r\n      });\r\n      \r\n      updateProducts([...products, response.data]);\r\n      setProductName(\"\");\r\n      setProductPrice(\"\");\r\n      setProductImage(null);\r\n      Toastify({\r\n        text: \"El nuevo producto ha sido agregado\",\r\n        duration: 3000,\r\n        gravity: \"top\",\r\n        position: \"right\",\r\n        style: {\r\n          background: \"green\",\r\n      },}).showToast();\r\n    } catch (error) {\r\n      console.error(\"Error al agregar producto:\", error);\r\n    }\r\n  };\r\n  const handleFinishChanges = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        updateProducts(products.filter((product) => product.id !== productId));\r\n        Toastify({\r\n          text: \"Producto eliminado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"red\",\r\n        }).showToast();\r\n      })\r\n      .catch((error) => console.error(\"Error al eliminar el producto:\", error));\r\n  };\r\n\r\n  const handleUpdateProduct = (productId, updatedProduct) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedProduct),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateProducts(\r\n          products.map((product) => (product.id === productId ? data : product))\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error al modificar el producto:\", error));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2 className= 'nuevo'>Agrega un nuevo producto</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => setProductPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      <button className=\"añadir\" onClick={handleAddProduct}>\r\n        Añadir\r\n      </button>\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n      <h2 className= 'lista'>Lista de productos</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n      <li key={product.id} className=\"product-item\">\r\n      <img src={`/images/${product.image}`} alt={product.name} />\r\n      <span>{product.name}</span>\r\n      <span>{product.price}</span>\r\n      <button onClick={() => handleDeleteProduct(product.id)}>\r\n        Eliminar\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          handleUpdateProduct(product.id, {\r\n            ...product,\r\n            name: prompt(\"Nuevo nombre\", product.name),\r\n            price: prompt(\"Nuevo precio\", product.price),\r\n            image: productImage || product.image,\r\n          })\r\n        }\r\n      >\r\n        Modificar\r\n      </button>\r\n    </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCrud;\r\n*/\n\n/*\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./admin.css\";\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst AdminCrud = ({ products, updateProducts }) => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setProductImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productName);\r\n    formData.append(\"price\", productPrice);\r\n    formData.append(\"image\", productImage);\r\n  \r\n    try {\r\n        const response = await axios.post(\"http://localhost:3001/products\", formData);\r\n        updateProducts([...products, response.data]);\r\n        setProductName(\"\");\r\n        setProductPrice(\"\");\r\n        setProductImage(null);\r\n        Toastify({\r\n          text: \"El nuevo producto ha sido agregado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"green\",\r\n        }).showToast();\r\n      } catch (error) {\r\n        console.error(\"Error al agregar producto:\", error);\r\n      }\r\n    };\r\n  const handleFinishChanges = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        updateProducts(products.filter((product) => product.id !== productId));\r\n        Toastify({\r\n          text: \"Producto eliminado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"red\",\r\n        }).showToast();\r\n      })\r\n      .catch((error) => console.error(\"Error al eliminar el producto:\", error));\r\n  };\r\n\r\n  const handleUpdateProduct = (productId, updatedProduct) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedProduct),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateProducts(\r\n          products.map((product) => (product.id === productId ? data : product))\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error al modificar el producto:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2 className= 'nuevo'>Agrega un nuevo producto</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => setProductPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      <button className=\"añadir\" onClick={handleAddProduct}>\r\n        Añadir\r\n      </button>\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n      <h2 className= 'lista'>Lista de productos</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n          <li key={product.id} className=\"product-item\">\r\n            <img src={product.image} alt={product.name} />\r\n            <span>{product.name}</span>\r\n            <span>{product.price}</span>\r\n            <button onClick={() => handleDeleteProduct(product.id)}>\r\n              Eliminar\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                handleUpdateProduct(product.id, {\r\n                  ...product,\r\n                  name: prompt(\"Nuevo nombre\", product.name),\r\n                  price: prompt(\"Nuevo precio\", product.price),\r\n                  image: productImage || product.image,\r\n                })\r\n              }\r\n            >\r\n              Modificar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCrud; */\nvar _c;\n$RefreshReg$(_c, \"AdminCrud\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AdminCrud","_s","products","setProducts","newProduct","setNewProduct","name","price","image","alertMessage","setAlertMessage","navigate","fetchProducts","response","get","data","error","console","handleInputChange","e","target","value","handleAddProduct","post","handleDeleteProduct","id","delete","handleLogout","log","nav","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","product","src","alt","_c","$RefreshReg$"],"sources":["D:/Nini/programacion/Tienda/src/components/PanelAdmin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './admin.css';\r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\nfunction AdminCrud() {\r\n  const [products, setProducts] = useState([]);\r\n  const [newProduct, setNewProduct] = useState({\r\n    name: '',\r\n    price: '',\r\n    image: ''\r\n  });\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/products');\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewProduct({\r\n      ...newProduct,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3001/products', newProduct);\r\n      setAlertMessage('Producto añadido con éxito');\r\n      setNewProduct({ name: '', price: '', image: '' });\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/products/${id}`);\r\n      setAlertMessage('Producto eliminado');\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    console.log('Sesión cerrada');\r\n    nav\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <div>\r\n        <h2>Añadir Producto</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Nombre\"\r\n          value={newProduct.name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          placeholder=\"Precio\"\r\n          value={newProduct.price}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          placeholder=\"URL de la imagen\"\r\n          value={newProduct.image}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddProduct}>Añadir</button>\r\n      </div>\r\n      {alertMessage && <p>{alertMessage}</p>}\r\n      <ul>\r\n        {products.map((product) => (\r\n          <li key={product.id}>\r\n            <img src={product.image} alt={product.name} />\r\n            <p>Nombre: {product.name}</p>\r\n            <p>Precio: {product.price}</p>\r\n            <button onClick={() => handleDeleteProduct(product.id)}>\r\n              Eliminar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleLogout}>Guardar cambios y cerrar sesión</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminCrud;\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./admin.css\";\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst AdminCrud = ({ products, updateProducts }) => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setProductImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productName);\r\n    formData.append(\"price\", productPrice);\r\n    formData.append(\"image\", productImage);\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:3001/products\", formData, {\r\n        headers: {\r\n          \"Content-Type\": 'multipart/form-data'\r\n        }\r\n      });\r\n      \r\n      updateProducts([...products, response.data]);\r\n      setProductName(\"\");\r\n      setProductPrice(\"\");\r\n      setProductImage(null);\r\n      Toastify({\r\n        text: \"El nuevo producto ha sido agregado\",\r\n        duration: 3000,\r\n        gravity: \"top\",\r\n        position: \"right\",\r\n        style: {\r\n          background: \"green\",\r\n      },}).showToast();\r\n    } catch (error) {\r\n      console.error(\"Error al agregar producto:\", error);\r\n    }\r\n  };\r\n  const handleFinishChanges = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        updateProducts(products.filter((product) => product.id !== productId));\r\n        Toastify({\r\n          text: \"Producto eliminado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"red\",\r\n        }).showToast();\r\n      })\r\n      .catch((error) => console.error(\"Error al eliminar el producto:\", error));\r\n  };\r\n\r\n  const handleUpdateProduct = (productId, updatedProduct) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedProduct),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateProducts(\r\n          products.map((product) => (product.id === productId ? data : product))\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error al modificar el producto:\", error));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2 className= 'nuevo'>Agrega un nuevo producto</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => setProductPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      <button className=\"añadir\" onClick={handleAddProduct}>\r\n        Añadir\r\n      </button>\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n      <h2 className= 'lista'>Lista de productos</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n      <li key={product.id} className=\"product-item\">\r\n      <img src={`/images/${product.image}`} alt={product.name} />\r\n      <span>{product.name}</span>\r\n      <span>{product.price}</span>\r\n      <button onClick={() => handleDeleteProduct(product.id)}>\r\n        Eliminar\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          handleUpdateProduct(product.id, {\r\n            ...product,\r\n            name: prompt(\"Nuevo nombre\", product.name),\r\n            price: prompt(\"Nuevo precio\", product.price),\r\n            image: productImage || product.image,\r\n          })\r\n        }\r\n      >\r\n        Modificar\r\n      </button>\r\n    </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCrud;\r\n*/\r\n\r\n\r\n/*\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./admin.css\";\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst AdminCrud = ({ products, updateProducts }) => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setProductImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productName);\r\n    formData.append(\"price\", productPrice);\r\n    formData.append(\"image\", productImage);\r\n  \r\n    try {\r\n        const response = await axios.post(\"http://localhost:3001/products\", formData);\r\n        updateProducts([...products, response.data]);\r\n        setProductName(\"\");\r\n        setProductPrice(\"\");\r\n        setProductImage(null);\r\n        Toastify({\r\n          text: \"El nuevo producto ha sido agregado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"green\",\r\n        }).showToast();\r\n      } catch (error) {\r\n        console.error(\"Error al agregar producto:\", error);\r\n      }\r\n    };\r\n  const handleFinishChanges = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        updateProducts(products.filter((product) => product.id !== productId));\r\n        Toastify({\r\n          text: \"Producto eliminado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"red\",\r\n        }).showToast();\r\n      })\r\n      .catch((error) => console.error(\"Error al eliminar el producto:\", error));\r\n  };\r\n\r\n  const handleUpdateProduct = (productId, updatedProduct) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedProduct),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateProducts(\r\n          products.map((product) => (product.id === productId ? data : product))\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error al modificar el producto:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2 className= 'nuevo'>Agrega un nuevo producto</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => setProductPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      <button className=\"añadir\" onClick={handleAddProduct}>\r\n        Añadir\r\n      </button>\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n      <h2 className= 'lista'>Lista de productos</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n          <li key={product.id} className=\"product-item\">\r\n            <img src={product.image} alt={product.name} />\r\n            <span>{product.name}</span>\r\n            <span>{product.price}</span>\r\n            <button onClick={() => handleDeleteProduct(product.id)}>\r\n              Eliminar\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                handleUpdateProduct(product.id, {\r\n                  ...product,\r\n                  name: prompt(\"Nuevo nombre\", product.name),\r\n                  price: prompt(\"Nuevo precio\", product.price),\r\n                  image: productImage || product.image,\r\n                })\r\n              }\r\n            >\r\n              Modificar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCrud; */"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}