{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nini\\\\programacion\\\\Tienda\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [usernames, setUsernames] = useState([]); // Estado para almacenar los nombres de usuario existentes\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch de los nombres de usuario existentes desde el servidor\n    axios.get('http://localhost:3001/users').then(response => {\n      const existingUsernames = response.data.map(user => user.username);\n      setUsernames(existingUsernames);\n    }).catch(error => {\n      console.error('Error al obtener los nombres de usuario:', error);\n    });\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setErrorMessage('Las contraseñas no coinciden');\n      return;\n    }\n\n    // Verificar si el nombre de usuario ya existe\n    if (usernames.includes(username)) {\n      setErrorMessage('El nombre de usuario ya está en uso');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3001/users', {\n        username,\n        password\n      });\n      console.log('Usuario registrado:', response.data);\n      setSuccessMessage('Bienvenid@');\n      navigate('/login');\n    } catch (error) {\n      console.error('Error al registrar usuario:', error);\n      setErrorMessage('Error al registrar usuario');\n    }\n  };\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"titulo-registro\",\n        children: \"Se parte de Barbieland\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"bienvenida\",\n        children: \" Crea un usuario y contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 26\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            id: \"username\",\n            type: \"text\",\n            placeholder: \"Usuario\",\n            value: username,\n            onChange: handleUsernameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            id: \"password\",\n            type: showPassword ? 'text' : 'password',\n            placeholder: \"Contrase\\xF1a\",\n            value: password,\n            onChange: handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            id: \"confirmPassword\",\n            type: showPassword ? 'text' : 'password',\n            placeholder: \"Confirmar contrase\\xF1a\",\n            value: confirmPassword,\n            onChange: handleConfirmPasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"register-btn\",\n          children: \"Registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"GbpKLifpy+g3gQSymomR6iMCvWo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\n\n/*import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  if (password !== confirmPassword) {\r\n    // Manejar el caso cuando las contraseñas no coinciden\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post('http://localhost:3000/users', {\r\n      username,\r\n      password,\r\n    });\r\n    console.log('Usuario registrado:', response.data);\r\n    // Aquí puedes redirigir al usuario o hacer cualquier otra acción después del registro exitoso\r\n  } catch (error) {\r\n    console.error('Error al registrar usuario:', error);\r\n  }\r\n};\r\n\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n    <div className=\"register-container\">\r\n      <h2 className=\"titulo-registro\">Se parte de Barbieland</h2>\r\n      <h5 className= \"bienvenida\"> Crea un usuario y contraseña</h5>\r\n      <form onSubmit={handleSubmit} className=\"register-form\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            placeholder=\"Usuario\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-input\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            placeholder=\"Contraseña\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n         \r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"register-btn\">\r\n          Registrarse\r\n        </button>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register; */\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","successMessage","setSuccessMessage","errorMessage","setErrorMessage","usernames","setUsernames","navigate","get","then","response","existingUsernames","data","map","user","catch","error","console","handleSubmit","e","preventDefault","includes","post","log","handleUsernameChange","target","value","handlePasswordChange","handleConfirmPasswordChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/Nini/programacion/Tienda/src/components/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [usernames, setUsernames] = useState([]); // Estado para almacenar los nombres de usuario existentes\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch de los nombres de usuario existentes desde el servidor\r\n    axios\r\n      .get('http://localhost:3001/users')\r\n      .then((response) => {\r\n        const existingUsernames = response.data.map((user) => user.username);\r\n        setUsernames(existingUsernames);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error al obtener los nombres de usuario:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    // Verificar si el nombre de usuario ya existe\r\n    if (usernames.includes(username)) {\r\n      setErrorMessage('El nombre de usuario ya está en uso');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/users', {\r\n        username,\r\n        password,\r\n      });\r\n      console.log('Usuario registrado:', response.data);\r\n      setSuccessMessage('Bienvenid@');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error al registrar usuario:', error);\r\n      setErrorMessage('Error al registrar usuario');\r\n    }\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"register-container\">\r\n        <h2 className=\"titulo-registro\">Se parte de Barbieland</h2>\r\n        <h5 className=\"bienvenida\"> Crea un usuario y contraseña</h5>\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n        <form onSubmit={handleSubmit} className=\"register-form\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-input\"\r\n              id=\"username\"\r\n              type=\"text\"\r\n              placeholder=\"Usuario\"\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-input\"\r\n              id=\"password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              placeholder=\"Contraseña\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-input\"\r\n              id=\"confirmPassword\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              placeholder=\"Confirmar contraseña\"\r\n              value={confirmPassword}\r\n              onChange={handleConfirmPasswordChange}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"register-btn\">\r\n            Registrarse\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n\r\n/*import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  if (password !== confirmPassword) {\r\n    // Manejar el caso cuando las contraseñas no coinciden\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post('http://localhost:3000/users', {\r\n      username,\r\n      password,\r\n    });\r\n    console.log('Usuario registrado:', response.data);\r\n    // Aquí puedes redirigir al usuario o hacer cualquier otra acción después del registro exitoso\r\n  } catch (error) {\r\n    console.error('Error al registrar usuario:', error);\r\n  }\r\n};\r\n\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n    <div className=\"register-container\">\r\n      <h2 className=\"titulo-registro\">Se parte de Barbieland</h2>\r\n      <h5 className= \"bienvenida\"> Crea un usuario y contraseña</h5>\r\n      <form onSubmit={handleSubmit} className=\"register-form\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            placeholder=\"Usuario\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-input\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            placeholder=\"Contraseña\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n         \r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"register-btn\">\r\n          Registrarse\r\n        </button>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register; */"],"mappings":"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C,QAAQ;UAACR,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAE/C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1C,EAAA,CA3GQD,QAAQ;EAAA,QAQEH,WAAW;AAAA;AAAAoD,EAAA,GARrBjD,QAAQ;AA6GjB,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlFA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}