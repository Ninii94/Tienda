{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nini\\\\programacion\\\\Tienda\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ProductList from './components/ProductList';\nimport Cart from './components/Cart/Cart';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Testimonials from './components/Testimonials';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    if (loggedIn) {\n      setIsLoggedIn(true);\n    }\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/products');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error al obtener los productos:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:3001/users', {\n        username,\n        password\n      });\n      if (response.data.length > 0) {\n        setIsLoggedIn(true);\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('user', JSON.stringify(response.data[0]));\n        alert('Bienvenid@');\n      } else {\n        alert('Usuario o contraseña incorrectos');\n      }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n      alert('Contraseña y/o Usuario incorrectos');\n    }\n  };\n  const handleAddToCart = product => {\n    setCart([...cart, {\n      ...product,\n      quantity: 1\n    }]);\n    setShowAlert(true); // Actualizar el estado showAlert a true\n    setTimeout(() => {\n      setShowAlert(false); // Después de 3 segundos, establecer showAlert a false\n    }, 3000);\n  };\n  const handleRemove = item => {\n    const updatedCart = cart.filter(cartItem => cartItem.id !== item.id);\n    setCart(updatedCart);\n  };\n  const handleQuantityChange = (item, newQuantity) => {\n    const updatedCart = cart.map(cartItem => cartItem.id === item.id ? {\n      ...cartItem,\n      quantity: newQuantity\n    } : cartItem);\n    setCart(updatedCart);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n    localStorage.removeItem('user');\n    localStorage.removeItem('cart'); // Opcional: limpiar carrito al salir\n    setCart([]);\n  };\n\n  //\n  /*#__PURE__*/_jsxDEV(Navbar, {\n    isLoggedIn: isLoggedIn,\n    cart: cart,\n    onLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isLoggedIn: isLoggedIn,\n        cart: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ProductList, {\n              products: products,\n              onAddToCart: handleAddToCart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Testimonials, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {\n            cart: cart,\n            onRemove: handleRemove,\n            onQuantityChange: handleQuantityChange,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ProductList, {\n              products: products\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oi8eFZPZtQjgcmUbp4hIrv6VpfU=\");\n_c = App;\nexport default App;\n\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n                <Cart\r\n                  cart={cart}\r\n                  onRemove={handleRemove}\r\n                  onQuantityChange={handleQuantityChange}\r\n                  showAlert={showAlert}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  { <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> }\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\n\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/cart\" element={<Cart cart={cart} />} />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} />\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","Login","Register","ProductList","Cart","BrowserRouter","Router","Routes","Route","Testimonials","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","cart","setCart","showAlert","setShowAlert","products","setProducts","loggedIn","localStorage","getItem","fetchProducts","response","get","data","error","console","handleLogin","username","password","post","length","setItem","JSON","stringify","alert","handleAddToCart","product","quantity","setTimeout","handleRemove","item","updatedCart","filter","cartItem","id","handleQuantityChange","newQuantity","map","handleLogout","removeItem","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","element","onLogin","onAddToCart","onRemove","onQuantityChange","_c","$RefreshReg$"],"sources":["D:/Nini/programacion/Tienda/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Testimonials from './components/Testimonials';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\r\n    if (loggedIn) {\r\n      setIsLoggedIn(true);\r\n    }\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/products');\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n      }\r\n    };\r\n    fetchProducts();\r\n    \r\n  }, []);\r\n  \r\n\r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/users', { username, password });\r\n      \r\n      if (response.data.length > 0) {\r\n        setIsLoggedIn(true);\r\n        localStorage.setItem('isLoggedIn', 'true');\r\n        localStorage.setItem('user', JSON.stringify(response.data[0]));\r\n        alert('Bienvenid@');\r\n      } else {\r\n        alert('Usuario o contraseña incorrectos');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión:', error);\r\n      alert('Contraseña y/o Usuario incorrectos');\r\n    }\r\n  };\r\n  \r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true); // Actualizar el estado showAlert a true\r\n    setTimeout(() => {\r\n      setShowAlert(false); // Después de 3 segundos, establecer showAlert a false\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('cart');  // Opcional: limpiar carrito al salir\r\n    setCart([]);\r\n  };\r\n  \r\n  //\r\n  <Navbar isLoggedIn={isLoggedIn} cart={cart} onLogout={handleLogout} />\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={products} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList products={products} />\r\n                  {/* <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> */}\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n                <Cart\r\n                  cart={cart}\r\n                  onRemove={handleRemove}\r\n                  onQuantityChange={handleQuantityChange}\r\n                  showAlert={showAlert}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  { <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> }\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/cart\" element={<Cart cart={cart} />} />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} />\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}