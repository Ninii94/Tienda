{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\r\nimport ProductCard from './ProductCard';\r\nimport layout1 from '../layout1.jpg';\r\nimport layout2 from '../layout2.jpg';\r\nimport portada from '../portada.gif';\r\nimport { AuthContext } from './AuthContext';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\n\r\nfunction ProductList({ onAddToCart }) {\r\n  const [products, setProducts] = useState([]);\r\n  const [currentImage, setCurrentImage] = useState(layout1);\r\n  const [autoSlide, setAutoSlide] = useState(true);\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    const interval = setInterval(() => {\r\n      handleImageChange();\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n \r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/products');\r\n      const updatedProducts = response.data.map((product) => {\r\n        if (product.image.startsWith('http')) {\r\n          // La propiedad image es una URL, no se requiere cambio\r\n          return product;\r\n        } else {\r\n          // La propiedad image es un nombre de archivo local, prepara la URL\r\n          return { ...product, image: `/images/${product.image}` };\r\n        }\r\n      });\r\n      setProducts(updatedProducts);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  const handleAddToCart = (product) => {\r\n    if (isAuthenticated) {\r\n      addToCart(product);\r\n    } else {\r\n      alert(\"Por favor, inicia sesión para agregar productos al carrito.\");\r\n      // Aquí podrías redirigir al usuario a la página de login\r\n    }\r\n  };\r\n\r\n  const handleImageChange = () => {\r\n    setCurrentImage(currentImage === layout1 ? layout2 : layout1);\r\n  };\r\n  const handlePrevImage = () => {\r\n    setAutoSlide(false);\r\n    setCurrentImage(currentImage === layout1 ? layout2 : layout1);\r\n  };\r\n\r\n  const handleNextImage = () => {\r\n    setAutoSlide(false);\r\n    setCurrentImage(currentImage === layout1 ? layout2 : layout1);\r\n  };\r\n  const handleAddToCart = (product) => {\r\n    onAddToCart(product);\r\n    toast.success('Producto agregado al carrito', {\r\n      position: 'top-right',\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      style: { backgroundColor: 'pink', color: 'black' },\r\n    });\r\n  };\r\n\r\n  return (\r\n      <div>\r\n      <ToastContainer />\r\n      \r\n      <img src={portada} alt=\"Portada\" className=\"portada-gif\" />\r\n      <div className=\"layout-container\">\r\n      <div className=\"slider-container\">\r\n        <img\r\n          src={currentImage}\r\n          alt={currentImage === layout1 ? 'Layout 1' : 'Layout 2'}\r\n          className=\"layout-image\"\r\n        />\r\n        <button onClick={handlePrevImage}>&#8249;</button>\r\n        <button onClick={handleNextImage}>&#8250;</button>\r\n          </div>\r\n      </div>\r\n      <div className=\"container-productos\">\r\n        {products.map((product) => (\r\n          <ProductCard\r\n            key={product.id}\r\n            product={product}\r\n            onAddToCart={() => handleAddToCart(product)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList; \r\n*/","map":{"version":3,"names":[],"sources":["D:/Nini/programacion/Tienda/src/components/ProductList.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport ProductCard from './ProductCard';\r\nimport layout1 from '../layout1.jpg';\r\nimport layout2 from '../layout2.jpg';\r\nimport portada from '../portada.gif';\r\nimport { AuthContext } from './AuthContext';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\n\r\nfunction ProductList({ onAddToCart }) {\r\n  const [products, setProducts] = useState([]);\r\n  const [currentImage, setCurrentImage] = useState(layout1);\r\n  const [autoSlide, setAutoSlide] = useState(true);\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    const interval = setInterval(() => {\r\n      handleImageChange();\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n \r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/products');\r\n      const updatedProducts = response.data.map((product) => {\r\n        if (product.image.startsWith('http')) {\r\n          // La propiedad image es una URL, no se requiere cambio\r\n          return product;\r\n        } else {\r\n          // La propiedad image es un nombre de archivo local, prepara la URL\r\n          return { ...product, image: `/images/${product.image}` };\r\n        }\r\n      });\r\n      setProducts(updatedProducts);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  const handleAddToCart = (product) => {\r\n    if (isAuthenticated) {\r\n      addToCart(product);\r\n    } else {\r\n      alert(\"Por favor, inicia sesión para agregar productos al carrito.\");\r\n      // Aquí podrías redirigir al usuario a la página de login\r\n    }\r\n  };\r\n\r\n  const handleImageChange = () => {\r\n    setCurrentImage(currentImage === layout1 ? layout2 : layout1);\r\n  };\r\n  const handlePrevImage = () => {\r\n    setAutoSlide(false);\r\n    setCurrentImage(currentImage === layout1 ? layout2 : layout1);\r\n  };\r\n\r\n  const handleNextImage = () => {\r\n    setAutoSlide(false);\r\n    setCurrentImage(currentImage === layout1 ? layout2 : layout1);\r\n  };\r\n  const handleAddToCart = (product) => {\r\n    onAddToCart(product);\r\n    toast.success('Producto agregado al carrito', {\r\n      position: 'top-right',\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      style: { backgroundColor: 'pink', color: 'black' },\r\n    });\r\n  };\r\n\r\n  return (\r\n      <div>\r\n      <ToastContainer />\r\n      \r\n      <img src={portada} alt=\"Portada\" className=\"portada-gif\" />\r\n      <div className=\"layout-container\">\r\n      <div className=\"slider-container\">\r\n        <img\r\n          src={currentImage}\r\n          alt={currentImage === layout1 ? 'Layout 1' : 'Layout 2'}\r\n          className=\"layout-image\"\r\n        />\r\n        <button onClick={handlePrevImage}>&#8249;</button>\r\n        <button onClick={handleNextImage}>&#8250;</button>\r\n          </div>\r\n      </div>\r\n      <div className=\"container-productos\">\r\n        {products.map((product) => (\r\n          <ProductCard\r\n            key={product.id}\r\n            product={product}\r\n            onAddToCart={() => handleAddToCart(product)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList; \r\n*/"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}