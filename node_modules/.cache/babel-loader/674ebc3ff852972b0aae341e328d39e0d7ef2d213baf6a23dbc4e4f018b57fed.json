{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nini\\\\programacion\\\\Tienda\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ProductList from './components/ProductList';\nimport Cart from './components/Cart/Cart';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Testimonials from './components/Testimonials';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/products');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error al obtener los productos:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.get(`http://localhost:3001/auth/login?username=${username}&password=${password}`);\n      if (response.data.length > 0) {\n        setIsLoggedIn(true);\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('user', JSON.stringify(response.data[0]));\n        alert('Inicio de sesión exitoso');\n      } else {\n        alert('Usuario o contraseña incorrectos');\n      }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n      alert('Error al iniciar sesión. Por favor, inténtalo de nuevo.');\n    }\n  };\n  const handleRemove = item => {\n    const updatedCart = cart.filter(cartItem => cartItem.id !== item.id);\n    setCart(updatedCart);\n  };\n  const handleQuantityChange = (item, newQuantity) => {\n    const updatedCart = cart.map(cartItem => cartItem.id === item.id ? {\n      ...cartItem,\n      quantity: newQuantity\n    } : cartItem);\n    setCart(updatedCart);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n    localStorage.removeItem('user');\n    localStorage.removeItem('cart'); // Opcional: limpiar carrito al salir\n    setCart([]);\n  };\n\n  //\n  /*#__PURE__*/_jsxDEV(Navbar, {\n    isLoggedIn: isLoggedIn,\n    cart: cart,\n    onLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isLoggedIn: isLoggedIn,\n        cart: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ProductList, {\n              products: products,\n              onAddToCart: handleAddToCart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Testimonials, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {\n            cart: cart,\n            onRemove: handleRemove,\n            onQuantityChange: handleQuantityChange,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ProductList, {\n              products: products\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oi8eFZPZtQjgcmUbp4hIrv6VpfU=\");\n_c = App;\nexport default App;\n\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n                <Cart\r\n                  cart={cart}\r\n                  onRemove={handleRemove}\r\n                  onQuantityChange={handleQuantityChange}\r\n                  showAlert={showAlert}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  { <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> }\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\n\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/cart\" element={<Cart cart={cart} />} />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} />\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","Login","Register","ProductList","Cart","BrowserRouter","Router","Routes","Route","Testimonials","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","cart","setCart","showAlert","setShowAlert","products","setProducts","fetchProducts","response","get","data","error","console","handleLogin","username","password","length","localStorage","setItem","JSON","stringify","alert","handleRemove","item","updatedCart","filter","cartItem","id","handleQuantityChange","newQuantity","map","quantity","handleLogout","removeItem","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","element","onLogin","onAddToCart","handleAddToCart","onRemove","onQuantityChange","_c","$RefreshReg$"],"sources":["D:/Nini/programacion/Tienda/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/products');\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/auth/login?username=${username}&password=${password}`);\r\n      \r\n      if (response.data.length > 0) {\r\n        setIsLoggedIn(true);\r\n        localStorage.setItem('isLoggedIn', 'true');\r\n        localStorage.setItem('user', JSON.stringify(response.data[0]));\r\n        alert('Inicio de sesión exitoso');\r\n      } else {\r\n        alert('Usuario o contraseña incorrectos');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión:', error);\r\n      alert('Error al iniciar sesión. Por favor, inténtalo de nuevo.');\r\n    }\r\n  };\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('cart');  // Opcional: limpiar carrito al salir\r\n    setCart([]);\r\n  };\r\n  \r\n  //\r\n  <Navbar isLoggedIn={isLoggedIn} cart={cart} onLogout={handleLogout} />\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={products} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList products={products} />\r\n                  {/* <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> */}\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n                <Cart\r\n                  cart={cart}\r\n                  onRemove={handleRemove}\r\n                  onQuantityChange={handleQuantityChange}\r\n                  showAlert={showAlert}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  { <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> }\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/cart\" element={<Cart cart={cart} />} />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} />\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}