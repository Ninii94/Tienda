{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nini\\\\programacion\\\\Tienda\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ProductList from './components/ProductList';\nimport Cart from './components/Cart/Cart';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Testimonials from './components/Testimonials';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/products');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error al obtener los productos:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleLogin = (username, password) => {\n    if (username === 'admin' && password === '123') {\n      setIsLoggedIn(true);\n    }\n  };\n  const handleAddToCart = product => {\n    setCart([...cart, {\n      ...product,\n      quantity: 1\n    }]);\n    setShowAlert(true); // Actualizar el estado showAlert a true\n    setTimeout(() => {\n      setShowAlert(false); // DespuÃ©s de 3 segundos, establecer showAlert a false\n    }, 3000);\n  };\n  const handleRemove = item => {\n    const updatedCart = cart.filter(cartItem => cartItem.id !== item.id);\n    setCart(updatedCart);\n  };\n  const handleQuantityChange = (item, newQuantity) => {\n    const updatedCart = cart.map(cartItem => cartItem.id === item.id ? {\n      ...cartItem,\n      quantity: newQuantity\n    } : cartItem);\n    setCart(updatedCart);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isLoggedIn: isLoggedIn,\n        cart: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ProductList, {\n              products: products,\n              onAddToCart: handleAddToCart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Testimonials, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {\n            cart: cart,\n            onRemove: handleRemove,\n            onQuantityChange: handleQuantityChange,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ProductList, {\n              products: products\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oi8eFZPZtQjgcmUbp4hIrv6VpfU=\");\n_c = App;\nexport default App;\n\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n                <Cart\r\n                  cart={cart}\r\n                  onRemove={handleRemove}\r\n                  onQuantityChange={handleQuantityChange}\r\n                  showAlert={showAlert}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  { <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> }\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\n\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/cart\" element={<Cart cart={cart} />} />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} />\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","Login","Register","ProductList","Cart","BrowserRouter","Router","Routes","Route","Testimonials","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","cart","setCart","showAlert","setShowAlert","products","setProducts","fetchProducts","response","get","data","error","console","handleLogin","username","password","handleAddToCart","product","quantity","setTimeout","handleRemove","item","updatedCart","filter","cartItem","id","handleQuantityChange","newQuantity","map","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","onAddToCart","onRemove","onQuantityChange","_c","$RefreshReg$"],"sources":["D:/Nini/programacion/Tienda/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/products');\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true); // Actualizar el estado showAlert a true\r\n    setTimeout(() => {\r\n      setShowAlert(false); // DespuÃ©s de 3 segundos, establecer showAlert a false\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={products} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList products={products} />\r\n                  {/* <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> */}\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n                <Cart\r\n                  cart={cart}\r\n                  onRemove={handleRemove}\r\n                  onQuantityChange={handleQuantityChange}\r\n                  showAlert={showAlert}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  { <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} /> }\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ProductList from './components/ProductList';\r\nimport Cart from './components/Cart/Cart';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport productsData from './products.json';\r\nimport Testimonials from './components/Testimonials';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleLogin = (username, password) => {\r\n    if (username === 'admin' && password === '123') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n  const handleAddToCart = (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  (product) => {\r\n    setCart([...cart, { ...product, quantity: 1 }]);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n  const handleRemove = (item) => {\r\n    const updatedCart = cart.filter((cartItem) => cartItem.id !== item.id);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const handleQuantityChange = (item, newQuantity) => {\r\n    const updatedCart = cart.map((cartItem) =>\r\n      cartItem.id === item.id ? { ...cartItem, quantity: newQuantity } : cartItem\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isLoggedIn={isLoggedIn} cart={cart} />\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/cart\" element={<Cart cart={cart} />} />\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <>\r\n                  <ProductList />\r\n                  <AddProduct onAdd={(newProduct) => setProducts([...products, newProduct])} />\r\n                </>\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart={cart}\r\n                onRemove={handleRemove}\r\n                onQuantityChange={handleQuantityChange}\r\n                showAlert={showAlert}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <ProductList products={productsData} onAddToCart={handleAddToCart} />\r\n                <Testimonials />\r\n              </>\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; */"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}