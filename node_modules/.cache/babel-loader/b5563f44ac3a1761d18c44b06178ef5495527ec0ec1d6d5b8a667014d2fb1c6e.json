{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nini\\\\programacion\\\\Tienda\\\\src\\\\components\\\\PanelAdmin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useNavigate } from 'react-router-dom';\nimport './admin.css';\nimport { Image } from 'cloudinary-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminCrud({\n  handleLogout\n}) {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  const [editingProduct, setEditingProduct] = useState(null);\n  const navigate = useNavigate();\n  const [imageUrl, setImageUrl] = useState('');\n  const uploadPreset = 'munecas';\n  const cloudName = 'barbibibi';\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    fetchProducts();\n    fetchOrders();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/products');\n      setProducts(response.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/orders');\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n  const handleInputChange = (e, field) => {\n    switch (field) {\n      case 'name':\n        setProductName(e.target.value);\n        break;\n      case 'price':\n        setProductPrice(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleAddProduct = async () => {\n    try {\n      const newProduct = {\n        name: productName,\n        price: parseFloat(productPrice),\n        image: imageUrl\n      };\n      const response = await axios.post('http://localhost:3001/products', newProduct);\n      setProducts([...products, response.data]);\n      toast.success('Producto añadido con éxito', {\n        toastId: 'add-product'\n      });\n      clearFields();\n    } catch (error) {\n      console.error('Error adding product:', error);\n      toast.error('Error al añadir el producto', {\n        toastId: 'add-product-error'\n      });\n    }\n  };\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', uploadPreset);\n    try {\n      const res = await axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData);\n      setImageUrl(res.data.secure_url);\n    } catch (err) {\n      console.error('Error al subir la imagen:', err);\n      toast.error('Error al subir la imagen', {\n        toastId: 'upload-image-error'\n      });\n    }\n  };\n  const handleDeleteProduct = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/products/${id}`);\n      toast.success('Producto eliminado', {\n        toastId: 'delete-product'\n      });\n      fetchProducts();\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      toast.error('Error al eliminar el producto', {\n        toastId: 'delete-product-error'\n      });\n    }\n  };\n  const handleEditProduct = product => {\n    setEditingProduct(product);\n    setProductName(product.name);\n    setProductPrice(product.price.toString());\n  };\n  const handleUpdateProduct = async () => {\n    try {\n      const updatedProduct = {\n        name: productName,\n        price: parseFloat(productPrice),\n        image: imageUrl || editingProduct.image\n      };\n      await axios.put(`http://localhost:3001/products/${editingProduct.id}`, updatedProduct);\n      toast.success('Producto actualizado con éxito', {\n        toastId: 'update-product'\n      });\n      setEditingProduct(null);\n      clearFields();\n      fetchProducts();\n    } catch (error) {\n      console.error('Error updating product:', error);\n      toast.error('Error al actualizar el producto', {\n        toastId: 'update-product-error'\n      });\n    }\n  };\n  const clearFields = () => {\n    setProductName('');\n    setImageUrl('');\n    setProductPrice('');\n  };\n  const handleFinishChanges = () => {\n    handleLogout();\n    navigate('/');\n    toast.success('Sesión cerrada y cambios guardados', {\n      toastId: 'logout-success'\n    });\n  };\n  const handleDeleteOrder = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/orders/${id}`);\n      toast.success('compra eliminada', {\n        toastId: 'delete-order'\n      });\n      fetchOrders();\n    } catch (error) {\n      console.error('Error deleting order:', error);\n      toast.error('Error al eliminar la compra', {\n        toastId: 'delete-order-error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crud-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: editingProduct ? 'Editar Producto' : 'Agregar Nuevo Producto'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: productName,\n        onChange: e => handleInputChange(e, 'name')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Precio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: productPrice,\n        onChange: e => handleInputChange(e, 'price')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Imagen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          cloudName: cloudName,\n          publicId: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setImageUrl(''),\n          children: \"Eliminar imagen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), editingProduct ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-update\",\n      onClick: handleUpdateProduct,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"a\\xF1adir\",\n      onClick: handleAddProduct,\n      children: \"A\\xF1adir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-finish\",\n      onClick: handleFinishChanges,\n      children: \"Guardar cambios y cerrar sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      theme: \"colored\",\n      toastStyle: {\n        backgroundColor: '#ffc0cb',\n        color: '#000'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"product-list-title\",\n      children: \"Mis productos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-item\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [product.image.startsWith('http') ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/images/${product.image}`,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Precio: \", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-eliminar\",\n            onClick: () => handleDeleteProduct(product.id),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-modificar\",\n            onClick: () => handleEditProduct(product),\n            children: \"Modificar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"order-list-title\",\n      children: \"\\xDAltimas Compras\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-item\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Nombre: \", order.customerInfo.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"DNI: \", order.customerInfo.dni]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", order.customerInfo.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Notas adicionales: \", order.additionalNotes || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-eliminar\",\n            onClick: () => handleDeleteOrder(order.id),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminCrud, \"qa1DowTml4oFMreIo4Ee5VPnmA8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminCrud;\nexport default AdminCrud;\n\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './admin.css';\r\nimport { Image } from 'cloudinary-react';\r\n\r\nfunction AdminCrud({handleLogout}) {\r\n  const [products, setProducts] = useState([]);\r\n  const [productName, setProductName] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const uploadPreset = 'munecas';\r\n  const cloudName = 'barbibibi';\r\n  \r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/products');\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    switch (field) {\r\n      case 'name':\r\n        setProductName(e.target.value);\r\n        break;\r\n      case 'price':\r\n        setProductPrice(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    try {\r\n      const newProduct = {\r\n        name: productName,\r\n        price: parseFloat(productPrice),\r\n        image: imageUrl,\r\n      };\r\n\r\n      const response = await axios.post('http://localhost:3001/products', newProduct);\r\n      setProducts([...products, response.data]);\r\n      toast.success('Producto añadido con éxito', { toastId: 'add-product' });\r\n      clearFields();\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n      toast.error('Error al añadir el producto', { toastId: 'add-product-error' });\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', uploadPreset);\r\n\r\n    try {\r\n      const res = await axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData);\r\n      setImageUrl(res.data.secure_url);\r\n    } catch (err) {\r\n      console.error('Error al subir la imagen:', err);\r\n      toast.error('Error al subir la imagen', { toastId: 'upload-image-error' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/products/${id}`);\r\n      toast.success('Producto eliminado', { toastId: 'delete-product' });\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n      toast.error('Error al eliminar el producto', { toastId: 'delete-product-error' });\r\n    }\r\n  };\r\n\r\n  const handleEditProduct = (product) => {\r\n    setEditingProduct(product);\r\n    setProductName(product.name);\r\n    setProductPrice(product.price.toString());\r\n  };\r\n\r\n  const handleUpdateProduct = async () => {\r\n    try {\r\n      const updatedProduct = {\r\n        name: productName,\r\n        price: parseFloat(productPrice),\r\n        image: imageUrl || editingProduct.image,\r\n      };\r\n\r\n      await axios.put(`http://localhost:3001/products/${editingProduct.id}`, updatedProduct);\r\n      toast.success('Producto actualizado con éxito', { toastId: 'update-product' });\r\n      setEditingProduct(null);\r\n      clearFields();\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      toast.error('Error al actualizar el producto', { toastId: 'update-product-error' });\r\n    }\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setProductName('');\r\n    setImageUrl('');\r\n    setProductPrice('');\r\n  };\r\n\r\n  const handleFinishChanges = () => {\r\n    handleLogout();\r\n    navigate('/');\r\n    toast.success('Sesión cerrada y cambios guardados', { toastId: 'logout-success' });\r\n    setTimeout(() => {\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2>{editingProduct ? 'Editar Producto' : 'Agregar Nuevo Producto'}</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => handleInputChange(e, 'name')}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => handleInputChange(e, 'price')}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleImageUpload}\r\n        />\r\n        {imageUrl && (\r\n          <div>\r\n            <Image cloudName={cloudName} publicId={imageUrl} />\r\n            <button onClick={() => setImageUrl('')}>Eliminar imagen</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {editingProduct ? (\r\n        <button className=\"btn btn-update\" onClick={handleUpdateProduct}>\r\n          Actualizar\r\n        </button>\r\n      ) : (\r\n        <button className=\"añadir\" onClick={handleAddProduct}>\r\n          Añadir\r\n        </button>\r\n      )}\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"colored\"\r\n        toastStyle={{ backgroundColor: '#ffc0cb', color: '#000' }}\r\n      />\r\n      <h3 className=\"product-list-title\">Mis productos</h3>\r\n      <ul>\r\n        {products.map((product) => (\r\n          <div className=\"product-item\" key={product.id}>\r\n            <li>\r\n              {}\r\n        {product.image.startsWith('http') ? (\r\n          // Si la imagen proviene de Cloudinary\r\n          <img src={product.image} alt={product.name} />\r\n        ) : (\r\n          // Si la imagen proviene del JSON\r\n          <img src={`/images/${product.image}`} alt={product.name} />\r\n        )}\r\n              <p>Precio: {product.price}</p>\r\n              <p> {product.name}</p>\r\n              <button className=\"btn-eliminar\" onClick={() => handleDeleteProduct(product.id)}>\r\n                Eliminar\r\n              </button>\r\n              <button className=\"btn-modificar\" onClick={() => handleEditProduct(product)}>\r\n                Modificar\r\n              </button>\r\n            </li>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminCrud;\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./admin.css\";\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst AdminCrud = ({ products, updateProducts }) => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setProductImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productName);\r\n    formData.append(\"price\", productPrice);\r\n    formData.append(\"image\", productImage);\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:3001/products\", formData, {\r\n        headers: {\r\n          \"Content-Type\": 'multipart/form-data'\r\n        }\r\n      });\r\n      \r\n      updateProducts([...products, response.data]);\r\n      setProductName(\"\");\r\n      setProductPrice(\"\");\r\n      setProductImage(null);\r\n      Toastify({\r\n        text: \"El nuevo producto ha sido agregado\",\r\n        duration: 3000,\r\n        gravity: \"top\",\r\n        position: \"right\",\r\n        style: {\r\n          background: \"green\",\r\n      },}).showToast();\r\n    } catch (error) {\r\n      console.error(\"Error al agregar producto:\", error);\r\n    }\r\n  };\r\n  const handleFinishChanges = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        updateProducts(products.filter((product) => product.id !== productId));\r\n        Toastify({\r\n          text: \"Producto eliminado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"red\",\r\n        }).showToast();\r\n      })\r\n      .catch((error) => console.error(\"Error al eliminar el producto:\", error));\r\n  };\r\n\r\n  const handleUpdateProduct = (productId, updatedProduct) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedProduct),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateProducts(\r\n          products.map((product) => (product.id === productId ? data : product))\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error al modificar el producto:\", error));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2 className= 'nuevo'>Agrega un nuevo producto</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => setProductPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      <button className=\"añadir\" onClick={handleAddProduct}>\r\n        Añadir\r\n      </button>\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n      <h2 className= 'lista'>Lista de productos</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n      <li key={product.id} className=\"product-item\">\r\n      <img src={`/images/${product.image}`} alt={product.name} />\r\n      <span>{product.name}</span>\r\n      <span>{product.price}</span>\r\n      <button onClick={() => handleDeleteProduct(product.id)}>\r\n        Eliminar\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          handleUpdateProduct(product.id, {\r\n            ...product,\r\n            name: prompt(\"Nuevo nombre\", product.name),\r\n            price: prompt(\"Nuevo precio\", product.price),\r\n            image: productImage || product.image,\r\n          })\r\n        }\r\n      >\r\n        Modificar\r\n      </button>\r\n    </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCrud;\r\n*/\n\n/*\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./admin.css\";\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst AdminCrud = ({ products, updateProducts }) => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setProductImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productName);\r\n    formData.append(\"price\", productPrice);\r\n    formData.append(\"image\", productImage);\r\n  \r\n    try {\r\n        const response = await axios.post(\"http://localhost:3001/products\", formData);\r\n        updateProducts([...products, response.data]);\r\n        setProductName(\"\");\r\n        setProductPrice(\"\");\r\n        setProductImage(null);\r\n        Toastify({\r\n          text: \"El nuevo producto ha sido agregado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"green\",\r\n        }).showToast();\r\n      } catch (error) {\r\n        console.error(\"Error al agregar producto:\", error);\r\n      }\r\n    };\r\n  const handleFinishChanges = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        updateProducts(products.filter((product) => product.id !== productId));\r\n        Toastify({\r\n          text: \"Producto eliminado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"red\",\r\n        }).showToast();\r\n      })\r\n      .catch((error) => console.error(\"Error al eliminar el producto:\", error));\r\n  };\r\n\r\n  const handleUpdateProduct = (productId, updatedProduct) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedProduct),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateProducts(\r\n          products.map((product) => (product.id === productId ? data : product))\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error al modificar el producto:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2 className= 'nuevo'>Agrega un nuevo producto</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => setProductPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      <button className=\"añadir\" onClick={handleAddProduct}>\r\n        Añadir\r\n      </button>\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n      <h2 className= 'lista'>Lista de productos</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n          <li key={product.id} className=\"product-item\">\r\n            <img src={product.image} alt={product.name} />\r\n            <span>{product.name}</span>\r\n            <span>{product.price}</span>\r\n            <button onClick={() => handleDeleteProduct(product.id)}>\r\n              Eliminar\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                handleUpdateProduct(product.id, {\r\n                  ...product,\r\n                  name: prompt(\"Nuevo nombre\", product.name),\r\n                  price: prompt(\"Nuevo precio\", product.price),\r\n                  image: productImage || product.image,\r\n                })\r\n              }\r\n            >\r\n              Modificar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCrud; */\nvar _c;\n$RefreshReg$(_c, \"AdminCrud\");","map":{"version":3,"names":["React","useState","useEffect","axios","ToastContainer","toast","useNavigate","Image","jsxDEV","_jsxDEV","AdminCrud","handleLogout","_s","products","setProducts","productName","setProductName","productPrice","setProductPrice","editingProduct","setEditingProduct","navigate","imageUrl","setImageUrl","uploadPreset","cloudName","orders","setOrders","fetchProducts","fetchOrders","response","get","data","error","console","handleInputChange","e","field","target","value","handleAddProduct","newProduct","name","price","parseFloat","image","post","success","toastId","clearFields","handleImageUpload","file","files","formData","FormData","append","res","secure_url","err","handleDeleteProduct","id","delete","handleEditProduct","product","toString","handleUpdateProduct","updatedProduct","put","handleFinishChanges","handleDeleteOrder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","publicId","onClick","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","toastStyle","backgroundColor","color","map","startsWith","src","alt","order","customerInfo","dni","email","additionalNotes","_c","$RefreshReg$"],"sources":["D:/Nini/programacion/Tienda/src/components/PanelAdmin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './admin.css';\r\nimport { Image } from 'cloudinary-react';\r\n\r\nfunction AdminCrud({handleLogout}) {\r\n  const [products, setProducts] = useState([]);\r\n  const [productName, setProductName] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const uploadPreset = 'munecas';\r\n  const cloudName = 'barbibibi';\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/products');\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/orders');\r\n      setOrders(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    switch (field) {\r\n      case 'name':\r\n        setProductName(e.target.value);\r\n        break;\r\n      case 'price':\r\n        setProductPrice(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    try {\r\n      const newProduct = {\r\n        name: productName,\r\n        price: parseFloat(productPrice),\r\n        image: imageUrl,\r\n      };\r\n\r\n      const response = await axios.post('http://localhost:3001/products', newProduct);\r\n      setProducts([...products, response.data]);\r\n      toast.success('Producto añadido con éxito', { toastId: 'add-product' });\r\n      clearFields();\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n      toast.error('Error al añadir el producto', { toastId: 'add-product-error' });\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', uploadPreset);\r\n\r\n    try {\r\n      const res = await axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData);\r\n      setImageUrl(res.data.secure_url);\r\n    } catch (err) {\r\n      console.error('Error al subir la imagen:', err);\r\n      toast.error('Error al subir la imagen', { toastId: 'upload-image-error' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/products/${id}`);\r\n      toast.success('Producto eliminado', { toastId: 'delete-product' });\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n      toast.error('Error al eliminar el producto', { toastId: 'delete-product-error' });\r\n    }\r\n  };\r\n\r\n  const handleEditProduct = (product) => {\r\n    setEditingProduct(product);\r\n    setProductName(product.name);\r\n    setProductPrice(product.price.toString());\r\n  };\r\n\r\n  const handleUpdateProduct = async () => {\r\n    try {\r\n      const updatedProduct = {\r\n        name: productName,\r\n        price: parseFloat(productPrice),\r\n        image: imageUrl || editingProduct.image,\r\n      };\r\n\r\n      await axios.put(`http://localhost:3001/products/${editingProduct.id}`, updatedProduct);\r\n      toast.success('Producto actualizado con éxito', { toastId: 'update-product' });\r\n      setEditingProduct(null);\r\n      clearFields();\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      toast.error('Error al actualizar el producto', { toastId: 'update-product-error' });\r\n    }\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setProductName('');\r\n    setImageUrl('');\r\n    setProductPrice('');\r\n  };\r\n\r\n  const handleFinishChanges = () => {\r\n    handleLogout();\r\n    navigate('/');\r\n    toast.success('Sesión cerrada y cambios guardados', { toastId: 'logout-success' });\r\n  };\r\n\r\n  const handleDeleteOrder = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/orders/${id}`);\r\n      toast.success('compra eliminada', { toastId: 'delete-order' });\r\n      fetchOrders();\r\n    } catch (error) {\r\n      console.error('Error deleting order:', error);\r\n      toast.error('Error al eliminar la compra', { toastId: 'delete-order-error' });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2>{editingProduct ? 'Editar Producto' : 'Agregar Nuevo Producto'}</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => handleInputChange(e, 'name')}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => handleInputChange(e, 'price')}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleImageUpload}\r\n        />\r\n        {imageUrl && (\r\n          <div>\r\n            <Image cloudName={cloudName} publicId={imageUrl} />\r\n            <button onClick={() => setImageUrl('')}>Eliminar imagen</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {editingProduct ? (\r\n        <button className=\"btn btn-update\" onClick={handleUpdateProduct}>\r\n          Actualizar\r\n        </button>\r\n      ) : (\r\n        <button className=\"añadir\" onClick={handleAddProduct}>\r\n          Añadir\r\n        </button>\r\n      )}\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"colored\"\r\n        toastStyle={{ backgroundColor: '#ffc0cb', color: '#000' }}\r\n      />\r\n      <h3 className=\"product-list-title\">Mis productos</h3>\r\n      <ul>\r\n        {products.map((product) => (\r\n          <div className=\"product-item\" key={product.id}>\r\n            <li>\r\n              {product.image.startsWith('http') ? (\r\n                <img src={product.image} alt={product.name} />\r\n              ) : (\r\n                <img src={`/images/${product.image}`} alt={product.name} />\r\n              )}\r\n              <p>Precio: {product.price}</p>\r\n              <p>{product.name}</p>\r\n              <button className=\"btn-eliminar\" onClick={() => handleDeleteProduct(product.id)}>\r\n                Eliminar\r\n              </button>\r\n              <button className=\"btn-modificar\" onClick={() => handleEditProduct(product)}>\r\n                Modificar\r\n              </button>\r\n            </li>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3 className=\"order-list-title\">Últimas Compras</h3>\r\n      <ul>\r\n        {orders.map((order) => (\r\n          <div className=\"order-item\" key={order.id}>\r\n            <li>\r\n              <p>Nombre: {order.customerInfo.name}</p>\r\n              <p>DNI: {order.customerInfo.dni}</p>\r\n              <p>Email: {order.customerInfo.email}</p>\r\n              <p>Notas adicionales: {order.additionalNotes || 'N/A'}</p>\r\n              <button className=\"btn-eliminar\" onClick={() => handleDeleteOrder(order.id)}>\r\n                Eliminar\r\n              </button>\r\n            </li>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminCrud;\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './admin.css';\r\nimport { Image } from 'cloudinary-react';\r\n\r\nfunction AdminCrud({handleLogout}) {\r\n  const [products, setProducts] = useState([]);\r\n  const [productName, setProductName] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const uploadPreset = 'munecas';\r\n  const cloudName = 'barbibibi';\r\n  \r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/products');\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    switch (field) {\r\n      case 'name':\r\n        setProductName(e.target.value);\r\n        break;\r\n      case 'price':\r\n        setProductPrice(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    try {\r\n      const newProduct = {\r\n        name: productName,\r\n        price: parseFloat(productPrice),\r\n        image: imageUrl,\r\n      };\r\n\r\n      const response = await axios.post('http://localhost:3001/products', newProduct);\r\n      setProducts([...products, response.data]);\r\n      toast.success('Producto añadido con éxito', { toastId: 'add-product' });\r\n      clearFields();\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n      toast.error('Error al añadir el producto', { toastId: 'add-product-error' });\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', uploadPreset);\r\n\r\n    try {\r\n      const res = await axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData);\r\n      setImageUrl(res.data.secure_url);\r\n    } catch (err) {\r\n      console.error('Error al subir la imagen:', err);\r\n      toast.error('Error al subir la imagen', { toastId: 'upload-image-error' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/products/${id}`);\r\n      toast.success('Producto eliminado', { toastId: 'delete-product' });\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n      toast.error('Error al eliminar el producto', { toastId: 'delete-product-error' });\r\n    }\r\n  };\r\n\r\n  const handleEditProduct = (product) => {\r\n    setEditingProduct(product);\r\n    setProductName(product.name);\r\n    setProductPrice(product.price.toString());\r\n  };\r\n\r\n  const handleUpdateProduct = async () => {\r\n    try {\r\n      const updatedProduct = {\r\n        name: productName,\r\n        price: parseFloat(productPrice),\r\n        image: imageUrl || editingProduct.image,\r\n      };\r\n\r\n      await axios.put(`http://localhost:3001/products/${editingProduct.id}`, updatedProduct);\r\n      toast.success('Producto actualizado con éxito', { toastId: 'update-product' });\r\n      setEditingProduct(null);\r\n      clearFields();\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      toast.error('Error al actualizar el producto', { toastId: 'update-product-error' });\r\n    }\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setProductName('');\r\n    setImageUrl('');\r\n    setProductPrice('');\r\n  };\r\n\r\n  const handleFinishChanges = () => {\r\n    handleLogout();\r\n    navigate('/');\r\n    toast.success('Sesión cerrada y cambios guardados', { toastId: 'logout-success' });\r\n    setTimeout(() => {\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2>{editingProduct ? 'Editar Producto' : 'Agregar Nuevo Producto'}</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => handleInputChange(e, 'name')}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => handleInputChange(e, 'price')}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleImageUpload}\r\n        />\r\n        {imageUrl && (\r\n          <div>\r\n            <Image cloudName={cloudName} publicId={imageUrl} />\r\n            <button onClick={() => setImageUrl('')}>Eliminar imagen</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {editingProduct ? (\r\n        <button className=\"btn btn-update\" onClick={handleUpdateProduct}>\r\n          Actualizar\r\n        </button>\r\n      ) : (\r\n        <button className=\"añadir\" onClick={handleAddProduct}>\r\n          Añadir\r\n        </button>\r\n      )}\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"colored\"\r\n        toastStyle={{ backgroundColor: '#ffc0cb', color: '#000' }}\r\n      />\r\n      <h3 className=\"product-list-title\">Mis productos</h3>\r\n      <ul>\r\n        {products.map((product) => (\r\n          <div className=\"product-item\" key={product.id}>\r\n            <li>\r\n              {}\r\n        {product.image.startsWith('http') ? (\r\n          // Si la imagen proviene de Cloudinary\r\n          <img src={product.image} alt={product.name} />\r\n        ) : (\r\n          // Si la imagen proviene del JSON\r\n          <img src={`/images/${product.image}`} alt={product.name} />\r\n        )}\r\n              <p>Precio: {product.price}</p>\r\n              <p> {product.name}</p>\r\n              <button className=\"btn-eliminar\" onClick={() => handleDeleteProduct(product.id)}>\r\n                Eliminar\r\n              </button>\r\n              <button className=\"btn-modificar\" onClick={() => handleEditProduct(product)}>\r\n                Modificar\r\n              </button>\r\n            </li>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminCrud;\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./admin.css\";\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst AdminCrud = ({ products, updateProducts }) => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setProductImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productName);\r\n    formData.append(\"price\", productPrice);\r\n    formData.append(\"image\", productImage);\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:3001/products\", formData, {\r\n        headers: {\r\n          \"Content-Type\": 'multipart/form-data'\r\n        }\r\n      });\r\n      \r\n      updateProducts([...products, response.data]);\r\n      setProductName(\"\");\r\n      setProductPrice(\"\");\r\n      setProductImage(null);\r\n      Toastify({\r\n        text: \"El nuevo producto ha sido agregado\",\r\n        duration: 3000,\r\n        gravity: \"top\",\r\n        position: \"right\",\r\n        style: {\r\n          background: \"green\",\r\n      },}).showToast();\r\n    } catch (error) {\r\n      console.error(\"Error al agregar producto:\", error);\r\n    }\r\n  };\r\n  const handleFinishChanges = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        updateProducts(products.filter((product) => product.id !== productId));\r\n        Toastify({\r\n          text: \"Producto eliminado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"red\",\r\n        }).showToast();\r\n      })\r\n      .catch((error) => console.error(\"Error al eliminar el producto:\", error));\r\n  };\r\n\r\n  const handleUpdateProduct = (productId, updatedProduct) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedProduct),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateProducts(\r\n          products.map((product) => (product.id === productId ? data : product))\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error al modificar el producto:\", error));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2 className= 'nuevo'>Agrega un nuevo producto</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => setProductPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      <button className=\"añadir\" onClick={handleAddProduct}>\r\n        Añadir\r\n      </button>\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n      <h2 className= 'lista'>Lista de productos</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n      <li key={product.id} className=\"product-item\">\r\n      <img src={`/images/${product.image}`} alt={product.name} />\r\n      <span>{product.name}</span>\r\n      <span>{product.price}</span>\r\n      <button onClick={() => handleDeleteProduct(product.id)}>\r\n        Eliminar\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          handleUpdateProduct(product.id, {\r\n            ...product,\r\n            name: prompt(\"Nuevo nombre\", product.name),\r\n            price: prompt(\"Nuevo precio\", product.price),\r\n            image: productImage || product.image,\r\n          })\r\n        }\r\n      >\r\n        Modificar\r\n      </button>\r\n    </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCrud;\r\n*/\r\n\r\n\r\n/*\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./admin.css\";\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js';\r\nimport 'toastify-js/src/toastify.css';\r\n\r\nconst AdminCrud = ({ products, updateProducts }) => {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setProductImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", productName);\r\n    formData.append(\"price\", productPrice);\r\n    formData.append(\"image\", productImage);\r\n  \r\n    try {\r\n        const response = await axios.post(\"http://localhost:3001/products\", formData);\r\n        updateProducts([...products, response.data]);\r\n        setProductName(\"\");\r\n        setProductPrice(\"\");\r\n        setProductImage(null);\r\n        Toastify({\r\n          text: \"El nuevo producto ha sido agregado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"green\",\r\n        }).showToast();\r\n      } catch (error) {\r\n        console.error(\"Error al agregar producto:\", error);\r\n      }\r\n    };\r\n  const handleFinishChanges = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        updateProducts(products.filter((product) => product.id !== productId));\r\n        Toastify({\r\n          text: \"Producto eliminado\",\r\n          duration: 3000,\r\n          gravity: \"top\",\r\n          position: \"right\",\r\n          backgroundColor: \"red\",\r\n        }).showToast();\r\n      })\r\n      .catch((error) => console.error(\"Error al eliminar el producto:\", error));\r\n  };\r\n\r\n  const handleUpdateProduct = (productId, updatedProduct) => {\r\n    fetch(`http://localhost:3001/products/${productId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedProduct),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        updateProducts(\r\n          products.map((product) => (product.id === productId ? data : product))\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error al modificar el producto:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"crud-container\">\r\n      <h2 className= 'nuevo'>Agrega un nuevo producto</h2>\r\n      <div className=\"form-group\">\r\n        <label>Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Precio:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={productPrice}\r\n          onChange={(e) => setProductPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Imagen:</label>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      <button className=\"añadir\" onClick={handleAddProduct}>\r\n        Añadir\r\n      </button>\r\n      <button className=\"btn btn-finish\" onClick={handleFinishChanges}>\r\n        Guardar cambios y cerrar sesión\r\n      </button>\r\n      <h2 className= 'lista'>Lista de productos</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n          <li key={product.id} className=\"product-item\">\r\n            <img src={product.image} alt={product.name} />\r\n            <span>{product.name}</span>\r\n            <span>{product.price}</span>\r\n            <button onClick={() => handleDeleteProduct(product.id)}>\r\n              Eliminar\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                handleUpdateProduct(product.id, {\r\n                  ...product,\r\n                  name: prompt(\"Nuevo nombre\", product.name),\r\n                  price: prompt(\"Nuevo precio\", product.price),\r\n                  image: productImage || product.image,\r\n                })\r\n              }\r\n            >\r\n              Modificar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCrud; */"],"mappings":"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OACF,CAAC;AAEV;AAAC/D,EAAA,CA/OQF,SAAS;EAAA,QAKCJ,WAAW;AAAA;AAAAgG,EAAA,GALrB5F,SAAS;AAiPlB,eAAeA,SAAS;;AAIxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9IA,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}